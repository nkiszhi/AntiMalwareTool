// CMyNewDLG.cpp: 实现文件
//
#include "pch.h"
#include "stdafx.h"
#include "CAD VirusCleaner.h"
#include "CMyNewDLG.h"
#include "afxdialogex.h"
#include "CWhiteDLG.h"
#include "CResultDLG.h"




//进度条总范围
int progress_start = 0;
int progress_end = 100;


// CMyNewDLG 对话框

IMPLEMENT_DYNAMIC(CMyNewDLG, CDialogEx)

CMyNewDLG::CMyNewDLG(CWnd* pParent /*=nullptr*/)
	: CDialogEx(IDD_DIALOG1, pParent)
{
	m1_hIcon = AfxGetApp()->LoadIcon(IDI_ICON1);
}

CMyNewDLG::~CMyNewDLG()
{
}

BOOL CMyNewDLG::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// TODO:  在此添加额外的初始化
	tLock = false;
	outstr = L"";
	errorstr = L"";
	HWND hwnd = this->GetSafeHwnd();
	initLog(hwnd);
	UpdateWhitelist();
	CButton* radio = (CButton*)GetDlgItem(IDC_RADIO1);
	radio->SetCheck(1);
	m1_brush.CreateSolidBrush(RGB(255, 255, 255));

	// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m1_hIcon, TRUE);			// 设置大图标
	SetIcon(m1_hIcon, FALSE);		// 设置小图标


	return TRUE;  // return TRUE unless you set the focus to a control
				  // 异常: OCX 属性页应返回 FALSE
}

void CMyNewDLG::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_PROGRESS1, m_progress);
	DDX_Control(pDX, IDC_RADIO1, m_cadscan);
	DDX_Control(pDX, IDC_RADIO2, c_fulldickscan);
	DDX_Control(pDX, IDC_RADIO3, c_dirdiskscan);
	DDX_Control(pDX, IDC_EDIT1, m_text_out);
	DDX_Control(pDX, IDOK, m_start);
	DDX_Control(pDX, IDC_BUTTON5, m_errlog);
	//DDX_Control(pDX, IDC_STATIC, m_ongoing_txt);//这句话注释掉就可以进入下一个窗口
}//在这里会触发崩溃，可能是窗口控件移除后中有代码未删除干净引起的断言错误


BEGIN_MESSAGE_MAP(CMyNewDLG, CDialogEx)
	ON_BN_CLICKED(IDOK, &CMyNewDLG::OnBnClickedOk)
	ON_BN_CLICKED(IDCANCEL, &CMyNewDLG::OnBnClickedCancel)
	ON_MESSAGE(WM_MY_INILOG_MSG, &CMyNewDLG::OnMyIniLogMsgTrigger)
	ON_MESSAGE(WM_MY_PROGRESS_MSG, &CMyNewDLG::OnMyProgMsgTrigger)
	ON_MESSAGE(WM_MY_PROEND_MSG, &CMyNewDLG::OnMyProEndMsgTrigger)
	ON_BN_CLICKED(IDC_BUTTON3, &CMyNewDLG::OnBnClickedButton3)
	ON_WM_COPYDATA()
	ON_WM_CTLCOLOR()
	ON_BN_CLICKED(IDC_BUTTON1, &CMyNewDLG::OnBnClickedButton1)
	ON_BN_CLICKED(IDC_BUTTON5, &CMyNewDLG::OnBnClickedButton5)
	ON_BN_CLICKED(IDC_RADIO2, &CMyNewDLG::OnBnClickedRadio2)
	ON_BN_CLICKED(IDC_RADIO1, &CMyNewDLG::OnBnClickedRadio1)
	ON_BN_CLICKED(IDC_RADIO3, &CMyNewDLG::OnBnClickedRadio3)
END_MESSAGE_MAP()

//初始化信息响应
LRESULT CMyNewDLG::OnMyIniLogMsgTrigger(WPARAM wParam, LPARAM lParam) {
	m_text_out.SetWindowTextW(outstr);
	outLog((wchar_t*)L"[+] 初始化成功。");
	return 0;
}

//更新进度条信息响应
LRESULT CMyNewDLG::OnMyProgMsgTrigger(WPARAM wParam, LPARAM lParam) {
	if (diskProgress == diskCount) 
		SetProgressPos(99, 100);
	else if(diskProgress != diskCount&& diskProgress!=0)
		SetProgressPos(diskProgress, diskCount);
	if(scanProgress == rowCount)
		SetProgressPos(99, 100);
	else if(scanProgress!=rowCount&&rowCount!=0)
		SetProgressPos(scanProgress, rowCount);


	return 0;
}

//结束信息响应
LRESULT CMyNewDLG::OnMyProEndMsgTrigger(WPARAM wParam, LPARAM lParam) {
	SetProgressPos(100, 100);
	m_start.EnableWindow(true);
	m_errlog.EnableWindow(true);
	//m_ongoing_txt.SetWindowTextW(L"扫描结束！");//这个控件也应该移除
	if (CADvirus.empty())
		//MessageBoxW(L"扫描完成，未发现可疑文件！");//这个控件应该被删除掉了,下面使用outlog代替
		outLog(L"扫描完成，未发现可疑文件！");
	else {
		Sleep(500);
		CResultDLG resultdlg;
		resultdlg.DoModal();
	}
	return 0;
}


//日志信息更新响应
BOOL CMyNewDLG::OnCopyData(CWnd* pWnd, COPYDATASTRUCT* pCopyDataStruct)
{
	// TODO: 在此添加消息处理程序代码和/或调用默认值
	CString msg = (LPWSTR)pCopyDataStruct->lpData;
	//MessageBox(msg);
	switch (pCopyDataStruct->dwData) {
	case 0:
		outstr = outstr + msg + L"\r\n";
		m_text_out.SetWindowTextW(outstr);
		m_text_out.LineScroll(m_text_out.GetLineCount() - 1, 0);
		break;
	case 1:
		errorstr = errorstr + msg;
		break;
	case 2:
		msg.Replace(_T("\?\\"), _T(""));
		msg = L"正在扫描文件："+msg;
		outLog(msg);
		//m_ongoing_txt.SetWindowTextW(msg);
		break;//这边又会出现一个断言错误导致崩溃
	default:
		MessageBox(msg);
	}
	return CDialogEx::OnCopyData(pWnd, pCopyDataStruct);
}

// 进度条
void CMyNewDLG::SetProgressPos(unsigned int pos, unsigned int total) {
	float precet = float(pos) / float(total);
	int pos2 = precet * 100;
	m_progress.SetPos(pos2);
}

//点击“扫描”按钮
void CMyNewDLG::OnBnClickedOk()
{
	// TODO: 在此添加控件通知处理程序代码
	m_start.EnableWindow(false);
	m_errlog.EnableWindow(false);
	SetProgressPos(0, 0);
	static int mode = 0;
	CButton* radio_cad = (CButton*)GetDlgItem(IDC_RADIO1);
	CButton* radio_full = (CButton*)GetDlgItem(IDC_RADIO2);
	CButton* radio_dir = (CButton*)GetDlgItem(IDC_RADIO3);
	CButton* check_delete = (CButton*)GetDlgItem(IDC_CHECK1);
	if (radio_cad->GetCheck())
		mode = 0;
	else if (radio_full->GetCheck())
		mode = 1;
	else if (radio_dir->GetCheck())
		mode = 2;
	if (!tLock) {
		tLock = true;
		switch (mode) {
		case 0:
			hThread.push_back((HANDLE)_beginthreadex(NULL, 0, (_beginthreadex_proc_type)&_tInstallPathScan, &tLock, 0, NULL));
			break;
		case 1:
			hThread.push_back((HANDLE)_beginthreadex(NULL, 0, (_beginthreadex_proc_type)&_tFullDiskScan, &tLock, 0, NULL));
			break;
		case 2:
			hThread.push_back((HANDLE)_beginthreadex(NULL, 0, (_beginthreadex_proc_type)&_tDirDiskScan, &tLock, 0, NULL));
			break;
		}
	}

}




//点击“退出”按钮
void CMyNewDLG::OnBnClickedCancel()
{
	// TODO: 在此添加控件通知处理程序代码
	tLock = false;
	KillAllThread(hThread);
	CDialogEx::OnCancel();

}



//点击“停止”按钮
void CMyNewDLG::OnBnClickedButton3()
{
	// TODO: 在此添加控件通知处理程序代码
	tLock = false;
	KillAllThread(hThread);
	SetProgressPos(0, 0);
	m_start.EnableWindow(true);
	m_errlog.EnableWindow(true);
	diskProgress = 0;
	outLog((wchar_t*)L"[-] 所有操作已经取消。");
	//m_ongoing_txt.SetWindowTextW(L"扫描结束！");

}//断言错误导致崩溃


//设置编辑框颜色
HBRUSH CMyNewDLG::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor)
{
	//HBRUSH hbr = CDialogEx::OnCtlColor(pDC, pWnd, nCtlColor);

	// TODO:  在此更改 DC 的任何特性
	switch (nCtlColor) {
	case CTLCOLOR_EDIT: //不可以改变颜色
		if (pWnd->GetDlgCtrlID() == IDC_EDIT1 || pWnd->GetDlgCtrlID() == IDC_EDIT2)
		{
			HBRUSH hbrEdit = ::CreateSolidBrush(RGB(255, 255, 255));
			pDC->SetBkColor(RGB(255, 255, 255));
			return  hbrEdit;
		}
	case CTLCOLOR_STATIC:  //可以
		if (pWnd->GetDlgCtrlID() == IDC_EDIT1 || pWnd->GetDlgCtrlID() == IDC_EDIT2)
		{
			HBRUSH hbrEdit = ::CreateSolidBrush(RGB(255, 255, 255));
			pDC->SetBkColor(RGB(255, 255, 255));
			return  hbrEdit;
		}
	}
	// TODO:  如果默认的不是所需画笔，则返回另一个画笔
	//return hbr;
	return m1_brush;
}

//点击“白名单”按钮
void CMyNewDLG::OnBnClickedButton1()
{
	// TODO: 在此添加控件通知处理程序代码
	CWhiteDLG whitedlg;
	whitedlg.DoModal();
}




//点击错误日志按钮
void CMyNewDLG::OnBnClickedButton5()
{
	// TODO: 在此添加控件通知处理程序代码
	CString err_path("./errorlog");
	CStdioFile Efile(err_path, CFile::modeWrite | CFile::modeCreate); //定义并初始化一个CStdioFile类的对Rfile 
	setlocale(LC_CTYPE, ("chs"));  //中文写入
	Efile.WriteString(errorstr + '\n');
	Efile.Close();
	MessageBox(L"日志信息已成功导出到本文件夹!", L"CAD病毒专杀工具", MB_ICONASTERISK);
}


//void CMyNewDLG::OnBnClickedStatic2()
//{
//	// TODO: 在此添加控件通知处理程序代码
//}



void CMyNewDLG::OnBnClickedRadio2()
{
	// TODO: 在此添加控件通知处理程序代码
}


void CMyNewDLG::OnBnClickedRadio1()
{
	// TODO: 在此添加控件通知处理程序代码
}


void CMyNewDLG::OnBnClickedRadio3()
{
	// TODO: 在此添加控件通知处理程序代码
}
