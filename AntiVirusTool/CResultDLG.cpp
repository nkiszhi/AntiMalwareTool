// CResultDLG.cpp: 实现文件
//

#include "pch.h"
#include "CAD VirusCleaner.h"
#include "afxdialogex.h"
#include "CResultDLG.h"
#include "MyKiller.h"

#include <locale>   //写入中文的头
#include <regex>
using namespace std;


// CResultDLG 对话框

IMPLEMENT_DYNAMIC(CResultDLG, CDialogEx)

CResultDLG::CResultDLG(CWnd* pParent /*=nullptr*/)
	: CDialogEx(IDD_DIALOG3, pParent)
{
	m3_hIcon = AfxGetApp()->LoadIcon(IDI_ICON1);
}

CResultDLG::~CResultDLG()
{
}

void CResultDLG::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_LIST1, m_result_list);
	DDX_Control(pDX, IDC_CHECK1, m_checkall);
}


BEGIN_MESSAGE_MAP(CResultDLG, CDialogEx)
	ON_BN_CLICKED(IDOK, &CResultDLG::OnBnClickedOk)
	ON_BN_CLICKED(IDC_BUTTON1, &CResultDLG::OnBnClickedButton1)
	ON_BN_CLICKED(IDC_BUTTON2, &CResultDLG::OnBnClickedButton2)
	ON_BN_CLICKED(IDCANCEL, &CResultDLG::OnBnClickedCancel)
	ON_BN_CLICKED(IDC_CHECK1, &CResultDLG::OnBnClickedCheck1)
	ON_LBN_SELCHANGE(IDC_LIST1, &CResultDLG::OnLbnSelchangeList1)
END_MESSAGE_MAP()

//初始化对话框，初始化listbox
BOOL CResultDLG::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// TODO:  在此添加额外的初始化

	int nlen = CADvirus.size();
	for (int i = 0; i < nlen; i++) {
		CString cstring(CADvirus[i]);
		m_result_list.AddString(cstring);
	}
	// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m3_hIcon, TRUE);			// 设置大图标
	SetIcon(m3_hIcon, FALSE);		// 设置小图标
	return TRUE;  // return TRUE unless you set the focus to a control
				  // 异常: OCX 属性页应返回 FALSE
}

//点击一键删除，将所选项加入deletelist
void CResultDLG::OnBnClickedOk()
{

	// TODO: 在此添加控件通知处理程序代码
	int count = this->m_result_list.GetSelCount();

	CArray<int, int> aryListBoxSel;

	aryListBoxSel.SetSize(count);
	m_result_list.GetSelItems(count, aryListBoxSel.GetData()); //获得所有被选中的索引
	for (int i = count-1; i >=0; i--)
	{
		
		CString Temp;
		m_result_list.GetText(aryListBoxSel[i], Temp);//获得每项的文字保存在Temp
		if (OpFile::MoveToBin(Temp.AllocSysString()))
		{
			std::wostringstream* wstrlog = new std::wostringstream;
			*wstrlog << L"删除成功" ;
			m_result_list.AddString(wstrlog->str().c_str());
		}
		m_result_list.DeleteString(aryListBoxSel[i]);  //list box删除
	}
}

//点击一键还原，将所选项加入comebacklist
void CResultDLG::OnBnClickedButton1()
{
	// TODO: 在此添加控件通知处理程序代码
	int count = this->m_result_list.GetSelCount();

	CArray<int, int> aryListBoxSel;

	aryListBoxSel.SetSize(count);
	m_result_list.GetSelItems(count, aryListBoxSel.GetData()); //获得所有被选中的索引
	for (int i = count - 1; i >= 0; i--)
	{
		CString Temp;
		m_result_list.GetText(aryListBoxSel[i], Temp);//获得每项的文字保存在Temp
		OpFile::RecoverFile(Temp.AllocSysString());
		m_result_list.DeleteString(aryListBoxSel[i]);  //list box删除
	}
}



//点击全选
void CResultDLG::OnBnClickedButton2()
{
	// TODO: 在此添加控件通知处理程序代码
	
}


void CResultDLG::OnBnClickedCancel()
{
	// TODO: 在此添加控件通知处理程序代码
	CDialogEx::OnCancel();
	CADvirus.clear();
}


void CResultDLG::OnBnClickedCheck1()
{
	// TODO: 在此添加控件通知处理程序代码
	if (m_checkall.GetCheck()) {
		int count = this->m_result_list.GetCount();
		for (int i = 0; i < count; i++)
			this->m_result_list.SetSel(i, 1);
	}
	
}


void CResultDLG::OnLbnSelchangeList1()
{
	// TODO: 在此添加控件通知处理程序代码
}
